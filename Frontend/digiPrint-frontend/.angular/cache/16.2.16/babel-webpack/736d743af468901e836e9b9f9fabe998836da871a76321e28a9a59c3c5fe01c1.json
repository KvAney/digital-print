{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/video.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./category-badge/category-badge.component\";\nimport * as i4 from \"./video-list/video-list.component\";\nimport * as i5 from \"./category-view/category-view.component\";\nfunction DashboardComponent_app_category_badge_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-category-badge\", 4);\n    i0.ɵɵlistener(\"badgeClick\", function DashboardComponent_app_category_badge_2_Template_app_category_badge_badgeClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onBadgeClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cat_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"name\", cat_r2.name)(\"percentage\", cat_r2.percentage);\n  }\n}\nfunction DashboardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"app-category-view\", 6);\n    i0.ɵɵlistener(\"close\", function DashboardComponent_div_3_Template_app_category_view_close_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.selectedCategory = null);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(2, \"app-video-list\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"category\", ctx_r1.selectedCategory);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"videos\", ctx_r1.getVideosForCategory(ctx_r1.selectedCategory));\n  }\n}\nexport class DashboardComponent {\n  constructor(youtubeService) {\n    this.youtubeService = youtubeService;\n    this.categories = [];\n    this.selectedCategory = null;\n  }\n  ngOnInit() {\n    const allVideos = this.youtubeService.getGroupedCategoryData();\n    const total = Object.values(allVideos).reduce((sum, v) => sum + v.length, 0);\n    this.categories = Object.entries(allVideos).map(([name, videos]) => ({\n      name,\n      percentage: Math.round(videos.length / total * 100),\n      videos\n    }));\n  }\n  onBadgeClick(categoryName) {\n    this.selectedCategory = categoryName;\n  }\n  getVideosForCategory(category) {\n    return this.categories.find(cat => cat.name === category)?.videos || [];\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 4,\n      vars: 2,\n      consts: [[1, \"category-row\"], [1, \"badcategory-rowges\"], [3, \"name\", \"percentage\", \"badgeClick\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"details\", 4, \"ngIf\"], [3, \"name\", \"percentage\", \"badgeClick\"], [1, \"details\"], [3, \"category\", \"close\"], [3, \"videos\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtemplate(2, DashboardComponent_app_category_badge_2_Template, 1, 2, \"app-category-badge\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, DashboardComponent_div_3_Template, 3, 2, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedCategory);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.CategoryBadgeComponent, i4.VideoListComponent, i5.CategoryViewComponent],\n      styles: [\".category-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap; \\n\\n  gap: 16px;        \\n\\n  justify-content: center; \\n\\n  padding: 20px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixlQUFlLEVBQUUscURBQXFEO0VBQ3RFLFNBQVMsU0FBUywwQkFBMEI7RUFDNUMsdUJBQXVCLEVBQUUsaUJBQWlCO0VBQzFDLGFBQWE7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXRlZ29yeS1yb3cge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBmbGV4LXdyYXA6IHdyYXA7IC8qIE9wdGlvbmFsOiBtb3ZlcyB0byBuZXh0IGxpbmUgaWYgbm90IGVub3VnaCBzcGFjZSAqL1xyXG4gIGdhcDogMTZweDsgICAgICAgIC8qIFNwYWNpbmcgYmV0d2VlbiBjYXJkcyAqL1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyAvKiBDZW50ZXIgYWxpZ24gKi9cclxuICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","DashboardComponent_app_category_badge_2_Template_app_category_badge_badgeClick_0_listener","$event","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","onBadgeClick","ɵɵelementEnd","ɵɵproperty","cat_r2","name","percentage","DashboardComponent_div_3_Template_app_category_view_close_1_listener","_r6","ctx_r5","selectedCategory","ɵɵelement","ɵɵadvance","ctx_r1","getVideosForCategory","DashboardComponent","constructor","youtubeService","categories","ngOnInit","allVideos","getGroupedCategoryData","total","Object","values","reduce","sum","v","length","entries","map","videos","Math","round","categoryName","category","find","cat","ɵɵdirectiveInject","i1","DataService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵtemplate","DashboardComponent_app_category_badge_2_Template","DashboardComponent_div_3_Template"],"sources":["G:\\Angulat\\DigitalPrint\\Frontend\\digiPrint-frontend\\src\\app\\dashboard\\dashboard.component.ts","G:\\Angulat\\DigitalPrint\\Frontend\\digiPrint-frontend\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../services/video.service';\nimport { Video } from '../models/video.model';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  categories: { name: string, percentage: number, videos: Video[] }[] = [];\n  selectedCategory: string | null = null;\n\n  constructor(private youtubeService: DataService) {}\n\n  ngOnInit() {\n    const allVideos = this.youtubeService.getGroupedCategoryData();\n    const total = Object.values(allVideos).reduce((sum, v) => sum + v.length, 0);\n\n    this.categories = Object.entries(allVideos).map(([name, videos]) => ({\n      name,\n      percentage: Math.round((videos.length / total) * 100),\n      videos\n    }));\n  }\n\n  onBadgeClick(categoryName: string) {\n    this.selectedCategory = categoryName;\n  }\n\n  getVideosForCategory(category: string) {\n    return this.categories.find(cat => cat.name === category)?.videos || [];\n  }\n}\n","<div class=\"category-row\">\n  <div class=\"badcategory-rowges\">\n    <app-category-badge\n      *ngFor=\"let cat of categories\"\n      [name]=\"cat.name\"\n      [percentage]=\"cat.percentage\"\n      (badgeClick)=\"onBadgeClick($event)\">\n    </app-category-badge>\n  </div>\n\n  <div class=\"details\" *ngIf=\"selectedCategory\">\n    <app-category-view\n      [category]=\"selectedCategory\"\n      (close)=\"selectedCategory = null\">\n    </app-category-view>\n\n    <app-video-list\n      [videos]=\"getVideosForCategory(selectedCategory)\">\n    </app-video-list>\n  </div>\n</div>\n"],"mappings":";;;;;;;;;ICEIA,EAAA,CAAAC,cAAA,4BAIsC;IAApCD,EAAA,CAAAE,UAAA,wBAAAC,0FAAAC,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAP,EAAA,CAAAQ,aAAA;MAAA,OAAcR,EAAA,CAAAS,WAAA,CAAAF,MAAA,CAAAG,YAAA,CAAAN,MAAA,CAAoB;IAAA,EAAC;IACrCJ,EAAA,CAAAW,YAAA,EAAqB;;;;IAHnBX,EAAA,CAAAY,UAAA,SAAAC,MAAA,CAAAC,IAAA,CAAiB,eAAAD,MAAA,CAAAE,UAAA;;;;;;IAMrBf,EAAA,CAAAC,cAAA,aAA8C;IAG1CD,EAAA,CAAAE,UAAA,mBAAAc,qEAAA;MAAAhB,EAAA,CAAAK,aAAA,CAAAY,GAAA;MAAA,MAAAC,MAAA,GAAAlB,EAAA,CAAAQ,aAAA;MAAA,OAAAR,EAAA,CAAAS,WAAA,CAAAS,MAAA,CAAAC,gBAAA,GAA4B,IAAI;IAAA,EAAC;IACnCnB,EAAA,CAAAW,YAAA,EAAoB;IAEpBX,EAAA,CAAAoB,SAAA,wBAEiB;IACnBpB,EAAA,CAAAW,YAAA,EAAM;;;;IAPFX,EAAA,CAAAqB,SAAA,GAA6B;IAA7BrB,EAAA,CAAAY,UAAA,aAAAU,MAAA,CAAAH,gBAAA,CAA6B;IAK7BnB,EAAA,CAAAqB,SAAA,GAAiD;IAAjDrB,EAAA,CAAAY,UAAA,WAAAU,MAAA,CAAAC,oBAAA,CAAAD,MAAA,CAAAH,gBAAA,EAAiD;;;ADRvD,OAAM,MAAOK,kBAAkB;EAI7BC,YAAoBC,cAA2B;IAA3B,KAAAA,cAAc,GAAdA,cAAc;IAHlC,KAAAC,UAAU,GAA4D,EAAE;IACxE,KAAAR,gBAAgB,GAAkB,IAAI;EAEY;EAElDS,QAAQA,CAAA;IACN,MAAMC,SAAS,GAAG,IAAI,CAACH,cAAc,CAACI,sBAAsB,EAAE;IAC9D,MAAMC,KAAK,GAAGC,MAAM,CAACC,MAAM,CAACJ,SAAS,CAAC,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACC,MAAM,EAAE,CAAC,CAAC;IAE5E,IAAI,CAACV,UAAU,GAAGK,MAAM,CAACM,OAAO,CAACT,SAAS,CAAC,CAACU,GAAG,CAAC,CAAC,CAACzB,IAAI,EAAE0B,MAAM,CAAC,MAAM;MACnE1B,IAAI;MACJC,UAAU,EAAE0B,IAAI,CAACC,KAAK,CAAEF,MAAM,CAACH,MAAM,GAAGN,KAAK,GAAI,GAAG,CAAC;MACrDS;KACD,CAAC,CAAC;EACL;EAEA9B,YAAYA,CAACiC,YAAoB;IAC/B,IAAI,CAACxB,gBAAgB,GAAGwB,YAAY;EACtC;EAEApB,oBAAoBA,CAACqB,QAAgB;IACnC,OAAO,IAAI,CAACjB,UAAU,CAACkB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAAChC,IAAI,KAAK8B,QAAQ,CAAC,EAAEJ,MAAM,IAAI,EAAE;EACzE;;;uBAvBWhB,kBAAkB,EAAAxB,EAAA,CAAA+C,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAlBzB,kBAAkB;MAAA0B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT/BxD,EAAA,CAAAC,cAAA,aAA0B;UAEtBD,EAAA,CAAA0D,UAAA,IAAAC,gDAAA,gCAKqB;UACvB3D,EAAA,CAAAW,YAAA,EAAM;UAENX,EAAA,CAAA0D,UAAA,IAAAE,iCAAA,iBASM;UACR5D,EAAA,CAAAW,YAAA,EAAM;;;UAjBgBX,EAAA,CAAAqB,SAAA,GAAa;UAAbrB,EAAA,CAAAY,UAAA,YAAA6C,GAAA,CAAA9B,UAAA,CAAa;UAOX3B,EAAA,CAAAqB,SAAA,GAAsB;UAAtBrB,EAAA,CAAAY,UAAA,SAAA6C,GAAA,CAAAtC,gBAAA,CAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}