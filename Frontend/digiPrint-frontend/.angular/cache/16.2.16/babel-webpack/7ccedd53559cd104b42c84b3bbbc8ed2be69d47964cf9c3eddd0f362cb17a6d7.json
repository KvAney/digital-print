{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/video.service\";\nfunction DashboardComponent_app_category_badge_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-category-badge\", 3);\n    i0.ɵɵlistener(\"select\", function DashboardComponent_app_category_badge_1_Template_app_category_badge_select_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const c_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onCategorySelected(c_r2.name));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"category\", c_r2.name)(\"percentage\", c_r2.percentage);\n  }\n}\nfunction DashboardComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5);\n    i0.ɵɵelement(2, \"app-category-badge\", 6);\n    i0.ɵɵelementStart(3, \"div\", 7)(4, \"div\")(5, \"strong\");\n    i0.ɵɵtext(6, \"Percent:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\")(9, \"strong\");\n    i0.ɵɵtext(10, \"Videos:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"div\", 8);\n    i0.ɵɵelement(13, \"app-video-list\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"category\", ctx_r1.selectedCategory)(\"percentage\", ctx_r1.selectedStat == null ? null : ctx_r1.selectedStat.percentage);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.selectedStat == null ? null : ctx_r1.selectedStat.percentage, \"%\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r1.selectedStat == null ? null : ctx_r1.selectedStat.count, \"/\", ctx_r1.totalVideos, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"videos\", ctx_r1.filteredVideos);\n  }\n}\nexport class DashboardComponent {\n  constructor(youtubeService) {\n    this.youtubeService = youtubeService;\n    // All categories with video list and stats\n    this.categories = [];\n    // Selected badge\n    this.selectedCategory = null;\n    this.selectedStat = null;\n    this.filteredVideos = [];\n    this.totalVideos = 0;\n  }\n  ngOnInit() {\n    const groupedVideos = this.youtubeService.getGroupedCategoryData();\n    this.totalVideos = Object.values(groupedVideos).reduce((sum, videos) => sum + videos.length, 0);\n    this.categories = Object.entries(groupedVideos).map(([name, videos]) => ({\n      name,\n      count: videos.length,\n      percentage: Math.round(videos.length / this.totalVideos * 100),\n      videos\n    }));\n  }\n  onCategorySelected(categoryName) {\n    this.selectedCategory = categoryName;\n    const stat = this.categories.find(c => c.name === categoryName);\n    if (stat) {\n      this.selectedStat = {\n        name: stat.name,\n        count: stat.count,\n        percentage: stat.percentage\n      };\n      this.filteredVideos = stat.videos;\n    } else {\n      this.selectedStat = null;\n      this.filteredVideos = [];\n    }\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 3,\n      vars: 2,\n      consts: [[1, \"category-top-row\"], [3, \"category\", \"percentage\", \"select\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"selected-view\", 4, \"ngIf\"], [3, \"category\", \"percentage\", \"select\"], [1, \"selected-view\"], [1, \"selected-badge\"], [3, \"category\", \"percentage\"], [1, \"details\"], [1, \"video-list-section\"], [3, \"videos\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, DashboardComponent_app_category_badge_1_Template, 1, 2, \"app-category-badge\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, DashboardComponent_div_2_Template, 14, 6, \"div\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedCategory);\n        }\n      },\n      styles: [\".category-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap; \\n\\n  gap: 16px;        \\n\\n  justify-content: center; \\n\\n  padding: 20px;\\n}\\n.category-top-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  flex-wrap: wrap;\\n  gap: 16px;\\n  padding: 16px;\\n}\\n\\n.selected-view[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin-top: 32px;\\n  padding: 20px;\\n  gap: 40px;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n\\n\\n.selected-card[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 220px;\\n  background: #f8f9fa;\\n  border-radius: 12px;\\n  box-shadow: 0 4px 20px rgba(0,0,0,0.1);\\n  padding: 20px;\\n  transition: transform 0.5s ease;\\n}\\n\\n.selected-card[_ngcontent-%COMP%]   .details[_ngcontent-%COMP%] {\\n  margin-top: 12px;\\n  text-align: center;\\n  font-size: 16px;\\n  color: #333;\\n}\\n\\n\\n\\n.video-list-section[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixlQUFlLEVBQUUscURBQXFEO0VBQ3RFLFNBQVMsU0FBUywwQkFBMEI7RUFDNUMsdUJBQXVCLEVBQUUsaUJBQWlCO0VBQzFDLGFBQWE7QUFDZjtBQUNBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixlQUFlO0VBQ2YsU0FBUztFQUNULGFBQWE7QUFDZjs7QUFFQTtFQUNFLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLFNBQVM7RUFDVCx1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBLGlDQUFpQztBQUNqQztFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLHNDQUFzQztFQUN0QyxhQUFhO0VBQ2IsK0JBQStCO0FBQ2pDOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsV0FBVztBQUNiOztBQUVBLHNCQUFzQjtBQUN0QjtFQUNFLE9BQU87QUFDVCIsInNvdXJjZXNDb250ZW50IjpbIi5jYXRlZ29yeS1yb3cge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBmbGV4LXdyYXA6IHdyYXA7IC8qIE9wdGlvbmFsOiBtb3ZlcyB0byBuZXh0IGxpbmUgaWYgbm90IGVub3VnaCBzcGFjZSAqL1xyXG4gIGdhcDogMTZweDsgICAgICAgIC8qIFNwYWNpbmcgYmV0d2VlbiBjYXJkcyAqL1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyAvKiBDZW50ZXIgYWxpZ24gKi9cclxuICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcbi5jYXRlZ29yeS10b3Atcm93IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuICBnYXA6IDE2cHg7XHJcbiAgcGFkZGluZzogMTZweDtcclxufVxyXG5cclxuLnNlbGVjdGVkLXZpZXcge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgbWFyZ2luLXRvcDogMzJweDtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGdhcDogNDBweDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4vKiBMZWZ0OiBFbmxhcmdlZCBzZWxlY3RlZCBjYXJkICovXHJcbi5zZWxlY3RlZC1jYXJkIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB3aWR0aDogMjIwcHg7XHJcbiAgYmFja2dyb3VuZDogI2Y4ZjlmYTtcclxuICBib3JkZXItcmFkaXVzOiAxMnB4O1xyXG4gIGJveC1zaGFkb3c6IDAgNHB4IDIwcHggcmdiYSgwLDAsMCwwLjEpO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNXMgZWFzZTtcclxufVxyXG5cclxuLnNlbGVjdGVkLWNhcmQgLmRldGFpbHMge1xyXG4gIG1hcmdpbi10b3A6IDEycHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBjb2xvcjogIzMzMztcclxufVxyXG5cclxuLyogUmlnaHQ6IFZpZGVvIExpc3QgKi9cclxuLnZpZGVvLWxpc3Qtc2VjdGlvbiB7XHJcbiAgZmxleDogMTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","DashboardComponent_app_category_badge_1_Template_app_category_badge_select_0_listener","restoredCtx","ɵɵrestoreView","_r4","c_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","onCategorySelected","name","ɵɵelementEnd","ɵɵproperty","percentage","ɵɵelement","ɵɵtext","ɵɵadvance","ctx_r1","selectedCategory","selectedStat","ɵɵtextInterpolate1","ɵɵtextInterpolate2","count","totalVideos","filteredVideos","DashboardComponent","constructor","youtubeService","categories","ngOnInit","groupedVideos","getGroupedCategoryData","Object","values","reduce","sum","videos","length","entries","map","Math","round","categoryName","stat","find","c","ɵɵdirectiveInject","i1","DataService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵtemplate","DashboardComponent_app_category_badge_1_Template","DashboardComponent_div_2_Template"],"sources":["G:\\Angulat\\DigitalPrint\\Frontend\\digiPrint-frontend\\src\\app\\dashboard\\dashboard.component.ts","G:\\Angulat\\DigitalPrint\\Frontend\\digiPrint-frontend\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../services/video.service';\nimport { Video } from '../models/video.model';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  // All categories with video list and stats\n  categories: { name: string, percentage: number, count: number, videos: Video[] }[] = [];\n\n  // Selected badge\n  selectedCategory: string | null = null;\n  selectedStat: { name: string, percentage: number, count: number } | null = null;\n  filteredVideos: Video[] = [];\n\n  totalVideos = 0;\n\n  constructor(private youtubeService: DataService) {}\n\n  ngOnInit(): void {\n    const groupedVideos = this.youtubeService.getGroupedCategoryData();\n\n    this.totalVideos = Object.values(groupedVideos).reduce((sum, videos) => sum + videos.length, 0);\n\n    this.categories = Object.entries(groupedVideos).map(([name, videos]) => ({\n      name,\n      count: videos.length,\n      percentage: Math.round((videos.length / this.totalVideos) * 100),\n      videos\n    }));\n  }\n\n  onCategorySelected(categoryName: string): void {\n    this.selectedCategory = categoryName;\n\n    const stat = this.categories.find(c => c.name === categoryName);\n    if (stat) {\n      this.selectedStat = {\n        name: stat.name,\n        count: stat.count,\n        percentage: stat.percentage\n      };\n      this.filteredVideos = stat.videos;\n    } else {\n      this.selectedStat = null;\n      this.filteredVideos = [];\n    }\n  }\n}\n","<!-- TOP ROW: All categories -->\n<div class=\"category-top-row\">\n  <app-category-badge\n    *ngFor=\"let c of categories\"\n    [category]=\"c.name\"\n    [percentage]=\"c.percentage\"\n    (select)=\"onCategorySelected(c.name)\">\n  </app-category-badge>\n</div>\n\n<!-- MAIN CONTENT: Selected badge on left, videos on right -->\n<div class=\"selected-view\" *ngIf=\"selectedCategory\">\n  <div class=\"selected-badge\">\n    <app-category-badge\n      [category]=\"selectedCategory\"\n      [percentage]=\"selectedStat?.percentage\">\n    </app-category-badge>\n    <div class=\"details\">\n      <div><strong>Percent:</strong> {{ selectedStat?.percentage }}%</div>\n      <div><strong>Videos:</strong> {{ selectedStat?.count }}/{{ totalVideos }}</div>\n    </div>\n  </div>\n\n  <div class=\"video-list-section\">\n    <app-video-list [videos]=\"filteredVideos\"></app-video-list>\n  </div>\n</div>\n"],"mappings":";;;;;ICEEA,EAAA,CAAAC,cAAA,4BAIwC;IAAtCD,EAAA,CAAAE,UAAA,oBAAAC,sFAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,IAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAAUV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,kBAAA,CAAAL,IAAA,CAAAM,IAAA,CAA0B;IAAA,EAAC;IACvCb,EAAA,CAAAc,YAAA,EAAqB;;;;IAHnBd,EAAA,CAAAe,UAAA,aAAAR,IAAA,CAAAM,IAAA,CAAmB,eAAAN,IAAA,CAAAS,UAAA;;;;;IAOvBhB,EAAA,CAAAC,cAAA,aAAoD;IAEhDD,EAAA,CAAAiB,SAAA,4BAGqB;IACrBjB,EAAA,CAAAC,cAAA,aAAqB;IACND,EAAA,CAAAkB,MAAA,eAAQ;IAAAlB,EAAA,CAAAc,YAAA,EAAS;IAACd,EAAA,CAAAkB,MAAA,GAA+B;IAAAlB,EAAA,CAAAc,YAAA,EAAM;IACpEd,EAAA,CAAAC,cAAA,UAAK;IAAQD,EAAA,CAAAkB,MAAA,eAAO;IAAAlB,EAAA,CAAAc,YAAA,EAAS;IAACd,EAAA,CAAAkB,MAAA,IAA2C;IAAAlB,EAAA,CAAAc,YAAA,EAAM;IAInFd,EAAA,CAAAC,cAAA,cAAgC;IAC9BD,EAAA,CAAAiB,SAAA,yBAA2D;IAC7DjB,EAAA,CAAAc,YAAA,EAAM;;;;IAXFd,EAAA,CAAAmB,SAAA,GAA6B;IAA7BnB,EAAA,CAAAe,UAAA,aAAAK,MAAA,CAAAC,gBAAA,CAA6B,eAAAD,MAAA,CAAAE,YAAA,kBAAAF,MAAA,CAAAE,YAAA,CAAAN,UAAA;IAIEhB,EAAA,CAAAmB,SAAA,GAA+B;IAA/BnB,EAAA,CAAAuB,kBAAA,MAAAH,MAAA,CAAAE,YAAA,kBAAAF,MAAA,CAAAE,YAAA,CAAAN,UAAA,MAA+B;IAChChB,EAAA,CAAAmB,SAAA,GAA2C;IAA3CnB,EAAA,CAAAwB,kBAAA,MAAAJ,MAAA,CAAAE,YAAA,kBAAAF,MAAA,CAAAE,YAAA,CAAAG,KAAA,OAAAL,MAAA,CAAAM,WAAA,KAA2C;IAK3D1B,EAAA,CAAAmB,SAAA,GAAyB;IAAzBnB,EAAA,CAAAe,UAAA,WAAAK,MAAA,CAAAO,cAAA,CAAyB;;;ADf7C,OAAM,MAAOC,kBAAkB;EAY7BC,YAAoBC,cAA2B;IAA3B,KAAAA,cAAc,GAAdA,cAAc;IAVlC;IACA,KAAAC,UAAU,GAA2E,EAAE;IAEvF;IACA,KAAAV,gBAAgB,GAAkB,IAAI;IACtC,KAAAC,YAAY,GAA+D,IAAI;IAC/E,KAAAK,cAAc,GAAY,EAAE;IAE5B,KAAAD,WAAW,GAAG,CAAC;EAEmC;EAElDM,QAAQA,CAAA;IACN,MAAMC,aAAa,GAAG,IAAI,CAACH,cAAc,CAACI,sBAAsB,EAAE;IAElE,IAAI,CAACR,WAAW,GAAGS,MAAM,CAACC,MAAM,CAACH,aAAa,CAAC,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAKD,GAAG,GAAGC,MAAM,CAACC,MAAM,EAAE,CAAC,CAAC;IAE/F,IAAI,CAACT,UAAU,GAAGI,MAAM,CAACM,OAAO,CAACR,aAAa,CAAC,CAACS,GAAG,CAAC,CAAC,CAAC7B,IAAI,EAAE0B,MAAM,CAAC,MAAM;MACvE1B,IAAI;MACJY,KAAK,EAAEc,MAAM,CAACC,MAAM;MACpBxB,UAAU,EAAE2B,IAAI,CAACC,KAAK,CAAEL,MAAM,CAACC,MAAM,GAAG,IAAI,CAACd,WAAW,GAAI,GAAG,CAAC;MAChEa;KACD,CAAC,CAAC;EACL;EAEA3B,kBAAkBA,CAACiC,YAAoB;IACrC,IAAI,CAACxB,gBAAgB,GAAGwB,YAAY;IAEpC,MAAMC,IAAI,GAAG,IAAI,CAACf,UAAU,CAACgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACnC,IAAI,KAAKgC,YAAY,CAAC;IAC/D,IAAIC,IAAI,EAAE;MACR,IAAI,CAACxB,YAAY,GAAG;QAClBT,IAAI,EAAEiC,IAAI,CAACjC,IAAI;QACfY,KAAK,EAAEqB,IAAI,CAACrB,KAAK;QACjBT,UAAU,EAAE8B,IAAI,CAAC9B;OAClB;MACD,IAAI,CAACW,cAAc,GAAGmB,IAAI,CAACP,MAAM;KAClC,MAAM;MACL,IAAI,CAACjB,YAAY,GAAG,IAAI;MACxB,IAAI,CAACK,cAAc,GAAG,EAAE;;EAE5B;;;uBA1CWC,kBAAkB,EAAA5B,EAAA,CAAAiD,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAlBvB,kBAAkB;MAAAwB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCR/B1D,EAAA,CAAAC,cAAA,aAA8B;UAC5BD,EAAA,CAAA4D,UAAA,IAAAC,gDAAA,gCAKqB;UACvB7D,EAAA,CAAAc,YAAA,EAAM;UAGNd,EAAA,CAAA4D,UAAA,IAAAE,iCAAA,kBAeM;;;UAvBY9D,EAAA,CAAAmB,SAAA,GAAa;UAAbnB,EAAA,CAAAe,UAAA,YAAA4C,GAAA,CAAA5B,UAAA,CAAa;UAQH/B,EAAA,CAAAmB,SAAA,GAAsB;UAAtBnB,EAAA,CAAAe,UAAA,SAAA4C,GAAA,CAAAtC,gBAAA,CAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}