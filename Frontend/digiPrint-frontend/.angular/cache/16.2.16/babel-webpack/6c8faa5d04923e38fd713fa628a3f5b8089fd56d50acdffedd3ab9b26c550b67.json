{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./category-badge/category-badge.component\";\nimport * as i3 from \"./video-list/video-list.component\";\nimport * as i4 from \"./category-view/category-view.component\";\nfunction DashboardComponent_app_category_badge_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-category-badge\", 4);\n    i0.ɵɵlistener(\"badgeClick\", function DashboardComponent_app_category_badge_2_Template_app_category_badge_badgeClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onBadgeClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cat_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"name\", cat_r2.name)(\"percentage\", cat_r2.percentage);\n  }\n}\nfunction DashboardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"app-category-view\", 6);\n    i0.ɵɵlistener(\"close\", function DashboardComponent_div_3_Template_app_category_view_close_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.selectedCategory = null);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(2, \"app-video-list\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"category\", ctx_r1.selectedCategory);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"videos\", ctx_r1.getVideosForCategory(ctx_r1.selectedCategory));\n  }\n}\nexport class DashboardComponent {\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      inputs: {\n        categoryName: \"categoryName\"\n      },\n      decls: 4,\n      vars: 2,\n      consts: [[1, \"dashboard\"], [1, \"badges\"], [3, \"name\", \"percentage\", \"badgeClick\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"details\", 4, \"ngIf\"], [3, \"name\", \"percentage\", \"badgeClick\"], [1, \"details\"], [3, \"category\", \"close\"], [3, \"videos\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtemplate(2, DashboardComponent_app_category_badge_2_Template, 1, 2, \"app-category-badge\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, DashboardComponent_div_3_Template, 3, 2, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedCategory);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf, i2.CategoryBadgeComponent, i3.VideoListComponent, i4.CategoryViewComponent],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\n{\n  this.selectedCategory = categoryName;\n}\nconst allVideos = this.youtubeService.getGroupedCategoryData();\nconst total = Object.values(allVideos).reduce((sum, v) => sum + v.length, 0);\nthis.categories = Object.entries(allVideos).map(([name, videos]) => ({\n  name,\n  percentage: Math.round(videos.length / total * 100),\n  videos\n}));","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","DashboardComponent_app_category_badge_2_Template_app_category_badge_badgeClick_0_listener","$event","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","onBadgeClick","ɵɵelementEnd","ɵɵproperty","cat_r2","name","percentage","DashboardComponent_div_3_Template_app_category_view_close_1_listener","_r6","ctx_r5","selectedCategory","ɵɵelement","ɵɵadvance","ctx_r1","getVideosForCategory","DashboardComponent","selectors","inputs","categoryName","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵtemplate","DashboardComponent_app_category_badge_2_Template","DashboardComponent_div_3_Template","categories","allVideos","youtubeService","getGroupedCategoryData","total","Object","values","reduce","sum","v","length","entries","map","videos","Math","round"],"sources":["G:\\Angulat\\DigitalPrint\\Frontend\\digiPrint-frontend\\src\\app\\dashboard\\dashboard.component.ts","G:\\Angulat\\DigitalPrint\\Frontend\\digiPrint-frontend\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n@Input() categoryName!:onBadgeClick(categoryName: string) {\n  this.selectedCategory = categoryName;\n  \n}\nconst allVideos = this.youtubeService.getGroupedCategoryData();\nconst total = Object.values(allVideos).reduce((sum, v) => sum + v.length, 0);\n\nthis.categories = Object.entries(allVideos).map(([name, videos]) => ({\n  name,\n  percentage: Math.round((videos.length / total) * 100),\n  videos\n}));\n\n}\n","<div class=\"dashboard\">\n  <div class=\"badges\">\n    <app-category-badge\n      *ngFor=\"let cat of categories\"\n      [name]=\"cat.name\"\n      [percentage]=\"cat.percentage\"\n      (badgeClick)=\"onBadgeClick($event)\">\n    </app-category-badge>\n  </div>\n\n  <div class=\"details\" *ngIf=\"selectedCategory\">\n    <app-category-view\n      [category]=\"selectedCategory\"\n      (close)=\"selectedCategory = null\">\n    </app-category-view>\n\n    <app-video-list\n      [videos]=\"getVideosForCategory(selectedCategory)\">\n    </app-video-list>\n  </div>\n</div>\n"],"mappings":";;;;;;;;ICEIA,EAAA,CAAAC,cAAA,4BAIsC;IAApCD,EAAA,CAAAE,UAAA,wBAAAC,0FAAAC,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAP,EAAA,CAAAQ,aAAA;MAAA,OAAcR,EAAA,CAAAS,WAAA,CAAAF,MAAA,CAAAG,YAAA,CAAAN,MAAA,CAAoB;IAAA,EAAC;IACrCJ,EAAA,CAAAW,YAAA,EAAqB;;;;IAHnBX,EAAA,CAAAY,UAAA,SAAAC,MAAA,CAAAC,IAAA,CAAiB,eAAAD,MAAA,CAAAE,UAAA;;;;;;IAMrBf,EAAA,CAAAC,cAAA,aAA8C;IAG1CD,EAAA,CAAAE,UAAA,mBAAAc,qEAAA;MAAAhB,EAAA,CAAAK,aAAA,CAAAY,GAAA;MAAA,MAAAC,MAAA,GAAAlB,EAAA,CAAAQ,aAAA;MAAA,OAAAR,EAAA,CAAAS,WAAA,CAAAS,MAAA,CAAAC,gBAAA,GAA4B,IAAI;IAAA,EAAC;IACnCnB,EAAA,CAAAW,YAAA,EAAoB;IAEpBX,EAAA,CAAAoB,SAAA,wBAEiB;IACnBpB,EAAA,CAAAW,YAAA,EAAM;;;;IAPFX,EAAA,CAAAqB,SAAA,GAA6B;IAA7BrB,EAAA,CAAAY,UAAA,aAAAU,MAAA,CAAAH,gBAAA,CAA6B;IAK7BnB,EAAA,CAAAqB,SAAA,GAAiD;IAAjDrB,EAAA,CAAAY,UAAA,WAAAU,MAAA,CAAAC,oBAAA,CAAAD,MAAA,CAAAH,gBAAA,EAAiD;;;ADVvD,OAAM,MAAOK,kBAAkB;;;uBAAlBA,kBAAkB;IAAA;EAAA;;;YAAlBA,kBAAkB;MAAAC,SAAA;MAAAC,MAAA;QAAAC,YAAA;MAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCP/BjC,EAAA,CAAAC,cAAA,aAAuB;UAEnBD,EAAA,CAAAmC,UAAA,IAAAC,gDAAA,gCAKqB;UACvBpC,EAAA,CAAAW,YAAA,EAAM;UAENX,EAAA,CAAAmC,UAAA,IAAAE,iCAAA,iBASM;UACRrC,EAAA,CAAAW,YAAA,EAAM;;;UAjBgBX,EAAA,CAAAqB,SAAA,GAAa;UAAbrB,EAAA,CAAAY,UAAA,YAAAsB,GAAA,CAAAI,UAAA,CAAa;UAOXtC,EAAA,CAAAqB,SAAA,GAAsB;UAAtBrB,EAAA,CAAAY,UAAA,SAAAsB,GAAA,CAAAf,gBAAA,CAAsB;;;;;;;;ADDY;EACxD,IAAI,CAACA,gBAAgB,GAAGQ,YAAY;;AAGtC,MAAMY,SAAS,GAAG,IAAI,CAACC,cAAc,CAACC,sBAAsB,EAAE;AAC9D,MAAMC,KAAK,GAAGC,MAAM,CAACC,MAAM,CAACL,SAAS,CAAC,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACC,MAAM,EAAE,CAAC,CAAC;AAE5E,IAAI,CAACV,UAAU,GAAGK,MAAM,CAACM,OAAO,CAACV,SAAS,CAAC,CAACW,GAAG,CAAC,CAAC,CAACpC,IAAI,EAAEqC,MAAM,CAAC,MAAM;EACnErC,IAAI;EACJC,UAAU,EAAEqC,IAAI,CAACC,KAAK,CAAEF,MAAM,CAACH,MAAM,GAAGN,KAAK,GAAI,GAAG,CAAC;EACrDS;CACD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}